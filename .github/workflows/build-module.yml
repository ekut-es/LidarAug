name: Build and test module

on:
  [ "push", "pull_request" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Toolchain Test PPA
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
      - name: Install C++ build tools & git
        run: sudo apt-get update && sudo apt-get install -y build-essential git gcc-13 g++-13
      - name: Install Boost
        run: sudo apt-get update && sudo apt-get install -y libboost-all-dev
      - name: Install OpenMP
        run: sudo apt-get update && sudo apt-get install -y libomp-dev
      - name: Update alternatives for GCC
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 50
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 50
      - name: Install cnpy
        run: |
          git clone https://github.com/TomSchammo/cnpy
          cd cnpy
          mkdir build
          cd build
          cmake ..
          make VERBOSE=1
          sudo make install
      - name: Install setuptools
        run: python -m pip install setuptools==69.5.1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pybind11 numpy==1.24.0
          python -m pip install torch==2.1.0+cpu -f https://download.pytorch.org/whl/torch_stable.html
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Find PyTorch cmake path
        id: find-torch-cmake-path
        run: |
          echo "TORCH_PATH=$(python -c 'import torch; import os; print(os.path.join(torch.__path__[0], "share", "cmake"))')" >> $GITHUB_ENV
      - name: Build and install C++ module
        run: |
          export CXXFLAGS="-fopenmp ${CXXFLAGS}"
          export CFLAGS="-fopenmp ${CFLAGS}"
          python -m pip install . -v --no-cache-dir
      - name: Test with pytest
        run: |
          python -m pytest ./pytest/test.py -v
